// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: strategy.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StrategyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kline         *KlineData             `protobuf:"bytes,1,opt,name=kline,proto3" json:"kline,omitempty"`
	TradeConfig   *TradeConfig           `protobuf:"bytes,2,opt,name=trade_config,json=tradeConfig,proto3" json:"trade_config,omitempty"`
	Strategy      string                 `protobuf:"bytes,3,opt,name=Strategy,proto3" json:"Strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrategyRequest) Reset() {
	*x = StrategyRequest{}
	mi := &file_strategy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyRequest) ProtoMessage() {}

func (x *StrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyRequest.ProtoReflect.Descriptor instead.
func (*StrategyRequest) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{0}
}

func (x *StrategyRequest) GetKline() *KlineData {
	if x != nil {
		return x.Kline
	}
	return nil
}

func (x *StrategyRequest) GetTradeConfig() *TradeConfig {
	if x != nil {
		return x.TradeConfig
	}
	return nil
}

func (x *StrategyRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

type StrategyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrategyResponse) Reset() {
	*x = StrategyResponse{}
	mi := &file_strategy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyResponse) ProtoMessage() {}

func (x *StrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyResponse.ProtoReflect.Descriptor instead.
func (*StrategyResponse) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{1}
}

type KlineData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         uint64                 `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	End           uint64                 `protobuf:"varint,2,opt,name=End,proto3" json:"End,omitempty"`
	Interval      string                 `protobuf:"bytes,3,opt,name=Interval,proto3" json:"Interval,omitempty"`
	Open          string                 `protobuf:"bytes,4,opt,name=Open,proto3" json:"Open,omitempty"`
	Close         string                 `protobuf:"bytes,5,opt,name=Close,proto3" json:"Close,omitempty"`
	High          string                 `protobuf:"bytes,6,opt,name=High,proto3" json:"High,omitempty"`
	Low           string                 `protobuf:"bytes,7,opt,name=Low,proto3" json:"Low,omitempty"`
	Volume        string                 `protobuf:"bytes,8,opt,name=Volume,proto3" json:"Volume,omitempty"`
	Turnover      string                 `protobuf:"bytes,9,opt,name=Turnover,proto3" json:"Turnover,omitempty"`
	Confirm       bool                   `protobuf:"varint,10,opt,name=Confirm,proto3" json:"Confirm,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,11,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Coin          uint64                 `protobuf:"varint,12,opt,name=Coin,proto3" json:"Coin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KlineData) Reset() {
	*x = KlineData{}
	mi := &file_strategy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlineData) ProtoMessage() {}

func (x *KlineData) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlineData.ProtoReflect.Descriptor instead.
func (*KlineData) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{2}
}

func (x *KlineData) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *KlineData) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *KlineData) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *KlineData) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *KlineData) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *KlineData) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *KlineData) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *KlineData) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *KlineData) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

func (x *KlineData) GetConfirm() bool {
	if x != nil {
		return x.Confirm
	}
	return false
}

func (x *KlineData) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *KlineData) GetCoin() uint64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

var File_strategy_proto protoreflect.FileDescriptor

const file_strategy_proto_rawDesc = "" +
	"\n" +
	"\x0estrategy.proto\x12\x02pb\x1a\x12trade_config.proto\"\x86\x01\n" +
	"\x0fStrategyRequest\x12#\n" +
	"\x05kline\x18\x01 \x01(\v2\r.pb.KlineDataR\x05kline\x122\n" +
	"\ftrade_config\x18\x02 \x01(\v2\x0f.pb.TradeConfigR\vtradeConfig\x12\x1a\n" +
	"\bStrategy\x18\x03 \x01(\tR\bStrategy\"\x12\n" +
	"\x10StrategyResponse\"\x9f\x02\n" +
	"\tKlineData\x12\x14\n" +
	"\x05Start\x18\x01 \x01(\x04R\x05Start\x12\x10\n" +
	"\x03End\x18\x02 \x01(\x04R\x03End\x12\x1a\n" +
	"\bInterval\x18\x03 \x01(\tR\bInterval\x12\x12\n" +
	"\x04Open\x18\x04 \x01(\tR\x04Open\x12\x14\n" +
	"\x05Close\x18\x05 \x01(\tR\x05Close\x12\x12\n" +
	"\x04High\x18\x06 \x01(\tR\x04High\x12\x10\n" +
	"\x03Low\x18\a \x01(\tR\x03Low\x12\x16\n" +
	"\x06Volume\x18\b \x01(\tR\x06Volume\x12\x1a\n" +
	"\bTurnover\x18\t \x01(\tR\bTurnover\x12\x18\n" +
	"\aConfirm\x18\n" +
	" \x01(\bR\aConfirm\x12\x1c\n" +
	"\tTimestamp\x18\v \x01(\x04R\tTimestamp\x12\x12\n" +
	"\x04Coin\x18\f \x01(\x04R\x04CoinB\x06Z\x04./pbb\x06proto3"

var (
	file_strategy_proto_rawDescOnce sync.Once
	file_strategy_proto_rawDescData []byte
)

func file_strategy_proto_rawDescGZIP() []byte {
	file_strategy_proto_rawDescOnce.Do(func() {
		file_strategy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_strategy_proto_rawDesc), len(file_strategy_proto_rawDesc)))
	})
	return file_strategy_proto_rawDescData
}

var file_strategy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_strategy_proto_goTypes = []any{
	(*StrategyRequest)(nil),  // 0: pb.StrategyRequest
	(*StrategyResponse)(nil), // 1: pb.StrategyResponse
	(*KlineData)(nil),        // 2: pb.KlineData
	(*TradeConfig)(nil),      // 3: pb.TradeConfig
}
var file_strategy_proto_depIdxs = []int32{
	2, // 0: pb.StrategyRequest.kline:type_name -> pb.KlineData
	3, // 1: pb.StrategyRequest.trade_config:type_name -> pb.TradeConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_strategy_proto_init() }
func file_strategy_proto_init() {
	if File_strategy_proto != nil {
		return
	}
	file_trade_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_strategy_proto_rawDesc), len(file_strategy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_strategy_proto_goTypes,
		DependencyIndexes: file_strategy_proto_depIdxs,
		MessageInfos:      file_strategy_proto_msgTypes,
	}.Build()
	File_strategy_proto = out.File
	file_strategy_proto_goTypes = nil
	file_strategy_proto_depIdxs = nil
}
